name: stack-manager-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  prepare:
    runs-on: self-hosted
    outputs:
      commit: ${{ steps.declare-variables.outputs.commit }}
    steps:
      - uses: actions/checkout@v2
      - id: declare-variables
        run: |
          echo "::set-output name=commit::$(git log -1 --format='%H')"
          
  get-changed-files:
    runs-on: self-hosted
    needs: prepare
    outputs:
      changed-files: ${{ steps.get-changed-file.outputs.changed-files }}
      change-file-dir: $ {{ steps.get-stack-name.outputs.stack-name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - id: get-changed-file
        run: |
          git diff-tree --no-commit-id --name-only -r ${{ needs.prepare.outputs.commit }} | grep -i -v -E '.github' | grep .yml
          if [ $? == 0 ]
          then
            echo "::set-output name=changed-files::$(git diff-tree --no-commit-id --name-only -r ${{ needs.prepare.outputs.commit }} | grep -i -v -E '.github' | grep .yml | tr "\n" " ")"
          fi
      - id: get-stack-name
        run: |
          echo ${{ steps.get-changed-file.outputs.changed-files }} | grep dev
          if[ $? == 0 ]
          then
            echo "::set-output name=stack-name::$(dirname ${{ steps.get-changed-file.outputs.changed-files }} | awk '{print $1"-dev"}')"
          fi
          
  deploy:
    runs-on: self-hosted
    needs: get-changed-files
    steps:
      - name: deploy stack
        timeout-minutes: 5
        run: docker stack deploy --compose-file ${{ needs.get-changed-files.outputs.changed-files }} 
